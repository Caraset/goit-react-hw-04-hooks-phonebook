{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Form/Form.module.css","components/Filter/Filter.module.css","App.module.css","components/Form/Form.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","index.js"],"names":["module","exports","Form","onSubmit","useState","name","setName","number","setNumber","onInputChange","currentTarget","value","className","s","form","e","preventDefault","id","uuidv4","form__label","form__input","onChange","type","pattern","title","required","form__button","Filter","filterValue","filter","filter__title","filter__input","Contacts","contacts","filteredContacts","removeHandler","length","contacts__nothingText","contacts__list","map","contact","contacts__item","contacts__text","contacts__btn","onClick","App","JSON","parse","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","app","app__title","find","el","alert","prevState","normalizedFilter","toLowerCase","includes","getFilteredContacts","updContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c73d3a84.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__3J-Og\",\"contacts__list\":\"Contacts_contacts__list__2LWPD\",\"contacts__nothingText\":\"Contacts_contacts__nothingText__2S2_t\",\"contacts__item\":\"Contacts_contacts__item__3Ljlb\",\"contacts__text\":\"Contacts_contacts__text__1dgr7\",\"contacts__btn\":\"Contacts_contacts__btn__2e29w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3uQRf\",\"form__label\":\"Form_form__label__36T9D\",\"form__input\":\"Form_form__input__308Dk\",\"form__button\":\"Form_form__button__Zu24G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__17hF8\",\"filter__title\":\"Filter_filter__title__n_V1a\",\"filter__input\":\"Filter_filter__input__1_tcn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1MOMV\",\"app__title\":\"App_app__title__3p4GD\"};","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nimport s from './Form.module.css';\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  function onInputChange({ currentTarget }) {\n    const name = currentTarget.name;\n    const value = currentTarget.value;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  }\n\n  function onFormSubmit(e) {\n    e.preventDefault();\n\n    const name = e.currentTarget.name.value;\n    const number = e.currentTarget.number.value;\n\n    onSubmit({ name, number, id: uuidv4() });\n\n    reset();\n  }\n\n  function reset() {\n    setName('');\n    setNumber('');\n  }\n\n  return (\n    <form className={s.form} onSubmit={onFormSubmit}>\n      <label className={s.form__label}>\n        Name\n        <input\n          className={s.form__input}\n          onChange={onInputChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n        />\n        <label className={s.form__label}>\n          Number\n          <input\n            className={s.form__input}\n            onChange={onInputChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n          />\n        </label>\n      </label>\n      <button className={s.form__button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Form;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ onInputChange, filterValue }) {\n  return (\n    <div className={s.filter}>\n      <p className={s.filter__title}>Find contacts by name</p>\n      <input\n        className={s.filter__input}\n        type=\"text\"\n        name=\"filter\"\n        onChange={onInputChange}\n        value={filterValue}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  onInputChange: PropTypes.func,\n  filterValue: PropTypes.string,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nfunction Contacts({ contacts, filteredContacts, removeHandler }) {\n  return (\n    <div className={s.contacts}>\n      {contacts.length === 0 ? (\n        <p className={s.contacts__nothingText}>No contacts added</p>\n      ) : (\n        <ul className={s.contacts__list}>\n          {filteredContacts.length === 0 ? (\n            <p className={s.contacts__nothingText}>Nothing found</p>\n          ) : (\n            filteredContacts.map(contact => (\n              <li className={s.contacts__item} key={contact.id}>\n                <p className={s.contacts__text}>\n                  {contact.name}: {contact.number}\n                </p>\n                <button\n                  className={s.contacts__btn}\n                  type=\"button\"\n                  onClick={() => removeHandler(contact.id)}\n                >\n                  Delete\n                </button>\n              </li>\n            ))\n          )}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  filteredContacts: PropTypes.arrayOf(PropTypes.object),\n  removeHandler: PropTypes.func,\n};\n\nexport default Contacts;\n","import { useState, useEffect } from 'react';\n\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport Contacts from './components/Contacts';\n\nimport s from './App.module.css';\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem('contacts')) || [];\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  function onSubmit(contact) {\n    const isInContacts = contacts.find(el => el.name === contact.name);\n\n    if (isInContacts) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n\n    setContacts(prevState => [...prevState, contact]);\n  }\n\n  function removeContact(id) {\n    const updContacts = contacts.filter(contact => contact.id !== id);\n\n    setContacts(updContacts);\n  }\n\n  function onFilterChangeHandle({ currentTarget }) {\n    const value = currentTarget.value;\n\n    setFilter(value);\n  }\n\n  function getFilteredContacts() {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(normalizedFilter) ||\n        contact.number.includes(normalizedFilter),\n    );\n  }\n\n  return (\n    <div className={s.app}>\n      <h1 className={s.app__title}>Phonebook</h1>\n      <Form onSubmit={onSubmit} />\n      <h2 className={s.app__title}>Contacts</h2>\n      <Filter filterValue={filter} onInputChange={onFilterChangeHandle} />\n      <Contacts\n        contacts={contacts}\n        filteredContacts={getFilteredContacts()}\n        removeHandler={removeContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}